trigger:
      - "main"

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

jobs:
  - job: Build
    displayName: 'Build and Test Node.js App'
    steps:
      # Step 1: Checkout the code
      - task: Checkout@1
        displayName: 'Checkout Code'

      # Step 2: Set up Node.js
      - task: UseNode@1
        inputs:
          versionSpec: '16.x'
        displayName: 'Set up Node.js'

      # Step 3: Install dependencies
      - script: |
          npm install
        displayName: 'Install Dependencies'

      # Step 4: Run Unit Tests
      - script: |
          npm test
        displayName: 'Run Unit Tests'

      # Step 5: Publish Test Results
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-reports/junit.xml'
          testRunTitle: 'Unit Tests'
          mergeTestResults: true
        displayName: 'Publish Test Results'

      # Step 6: Build Application
      - script: |
          npm run build  # Optional step, modify as needed
        displayName: 'Build Application'

      # Step 7: Publish Artifacts
      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'drop'
          publishLocation: 'Container'
        displayName: 'Publish Artifacts'

  - job: Deploy
    displayName: 'Deploy to Azure App Service'
    dependsOn: Build  
    condition: succeeded()
    steps:
      # Step 1: Download the artifact published from the Build job
      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: 'drop'
        displayName: 'Download Artifacts'

      # Step 2: Deploy to Azure App Service
      - task: AzureWebApp@1
        inputs:
          azureSubscription: 'AZURE_SUBSCRIPTION'  # Replace with your Azure subscription service connection
          appName: 'APP_NAME'  # Replace with your Azure App Service name
          package: '$(Pipeline.Workspace)/drop/*.zip'  # Assuming the app is packaged as a .zip file
        displayName: 'Deploy to Azure App Service'

    # Deployment Approval Gate
    environment: 
      name: 'Production'
      resourceType: 'AzureWebApp'
      approvers:
        - 'YOUR_APPROVER_EMAIL
      approvals:
        - timeoutInMinutes: 1440
